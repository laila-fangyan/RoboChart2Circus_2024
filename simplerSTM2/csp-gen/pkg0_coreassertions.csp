
--
-- RoboChart generator version 3.0.0.202401231330
-- Automatically generated on 23-05-2024 18:21:18
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "pkg0.csp"



-- generate pkg0_C1
P_pkg0_C1 = let
	id__ = 0
	
	
	
	const_pkg0_C1_s1_constant1 = const_pkg0_C1_stm0_constant1
	const_pkg0_C1_s2_constant1 = const_pkg0_C2_stm2_0_constant1
		
within
	pkg0::C1::O__(id__,
			    const_pkg0_C1_s1_constant1,
			    const_pkg0_C1_s2_constant1,
			    const_pkg0_C1_stm0_c1_constant1,
			    const_pkg0_C1_stm0_constant1)

assert P_pkg0_C1 :[deadlock-free]	
assert P_pkg0_C1;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1 :[deterministic]
assert P_pkg0_C1 :[divergence-free]

-- generate pkg0_C1_s1
P_pkg0_C1_s1 = let
	id__ = 0
	
	
	
within
	pkg0::C1::s1::O__(
		id__,
		const_pkg0_C1_stm0_constant1
	)
assert P_pkg0_C1_s1 :[deadlock-free]	
assert P_pkg0_C1_s1;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1_s1 :[deterministic]
assert P_pkg0_C1_s1 :[divergence-free]
-- generate pkg0_C1_s2
P_pkg0_C1_s2 = let
	id__ = 0
	
	
	
within
	pkg0::C1::s2::O__(
		id__,
		const_pkg0_C2_stm2_0_constant1
	)
assert P_pkg0_C1_s2 :[deadlock-free]	
assert P_pkg0_C1_s2;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1_s2 :[deterministic]
assert P_pkg0_C1_s2 :[divergence-free]
-- generate pkg0_C1_stm0_c1
P_pkg0_C1_stm0_c1 = let
	id__ = 0
	
	
	
within
	pkg0::C1::stm0_c1::O__(
		id__,
		const_pkg0_C1_stm0_c1_constant1
	)
assert P_pkg0_C1_stm0_c1 :[deadlock-free]	
assert P_pkg0_C1_stm0_c1;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1_stm0_c1 :[deterministic]
assert P_pkg0_C1_stm0_c1 :[divergence-free]
-- generate pkg0_C1_stm0
P_pkg0_C1_stm0 = let
	id__ = 0
	
	
	
within
	pkg0::C1::stm0::O__(
		id__,
		const_pkg0_C1_stm0_constant1
	)
assert P_pkg0_C1_stm0 :[deadlock-free]	
assert P_pkg0_C1_stm0;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1_stm0 :[deterministic]
assert P_pkg0_C1_stm0 :[divergence-free]
-- generate pkg0_C2
P_pkg0_C2 = let
	id__ = 0
	
	
	
	const_pkg0_C2_s0_constant1 = const_pkg3_M1_C1_stm0_constant1
	const_pkg0_C2_s1_constant1 = const_pkg0_C2_stm2_0_constant1
		
within
	pkg0::C2::O__(id__,
			    const_pkg0_C2_s0_constant1,
			    const_pkg0_C2_s1_constant1,
			    const_pkg0_C2_stm2_0_constant1)

assert P_pkg0_C2 :[deadlock-free]	
assert P_pkg0_C2;RUN({r__}) :[deadlock-free]
assert P_pkg0_C2 :[deterministic]
assert P_pkg0_C2 :[divergence-free]

-- generate pkg0_C2_s0
P_pkg0_C2_s0 = let
	id__ = 0
	
	
	
within
	pkg0::C2::s0::O__(
		id__,
		const_pkg3_M1_C1_stm0_constant1
	)
assert P_pkg0_C2_s0 :[deadlock-free]	
assert P_pkg0_C2_s0;RUN({r__}) :[deadlock-free]
assert P_pkg0_C2_s0 :[deterministic]
assert P_pkg0_C2_s0 :[divergence-free]
-- generate pkg0_C2_s1
P_pkg0_C2_s1 = let
	id__ = 0
	
	
	
within
	pkg0::C2::s1::O__(
		id__,
		const_pkg0_C2_stm2_0_constant1
	)
assert P_pkg0_C2_s1 :[deadlock-free]	
assert P_pkg0_C2_s1;RUN({r__}) :[deadlock-free]
assert P_pkg0_C2_s1 :[deterministic]
assert P_pkg0_C2_s1 :[divergence-free]
-- generate pkg0_C2_stm2_0
P_pkg0_C2_stm2_0 = let
	id__ = 0
	
	
	
within
	pkg0::C2::stm2_0::O__(
		id__,
		const_pkg0_C2_stm2_0_constant1
	)
assert P_pkg0_C2_stm2_0 :[deadlock-free]	
assert P_pkg0_C2_stm2_0;RUN({r__}) :[deadlock-free]
assert P_pkg0_C2_stm2_0 :[deterministic]
assert P_pkg0_C2_stm2_0 :[divergence-free]


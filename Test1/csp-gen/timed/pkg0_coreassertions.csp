
--
-- RoboChart generator version 3.0.0.202401231330
-- Automatically generated on 18-06-2024 09:43:33
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "pkg0.csp"



-- generate pkg0_C1
P_pkg0_C1 = let
	id__ = 0
	
	
	
	const_pkg0_C1_stm1_const1 = const_pkg0_C1_stm0_const1
		
within
	pkg0::C1::O__(id__,
			    const_pkg0_C1_stm0_const1,
			    const_pkg0_C1_stm1_const1)

assert P_pkg0_C1 :[deadlock-free]	
assert P_pkg0_C1;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1 :[deterministic]
assert P_pkg0_C1 :[divergence-free]

-- generate pkg0_C1_stm0
P_pkg0_C1_stm0 = let
	id__ = 0
	
	
	
within
	pkg0::C1::stm0::O__(
		id__,
		const_pkg0_C1_stm0_const1
	)
assert P_pkg0_C1_stm0 :[deadlock-free]	
assert P_pkg0_C1_stm0;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1_stm0 :[deterministic]
assert P_pkg0_C1_stm0 :[divergence-free]
-- timed deadlock free
assert prioritise(P_pkg0_C1_stm0[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_pkg0_C1_stm0
-- generate pkg0_C1_stm1
P_pkg0_C1_stm1 = let
	id__ = 0
	
	
	
within
	pkg0::C1::stm1::O__(
		id__,
		const_pkg0_C1_stm0_const1
	)
assert P_pkg0_C1_stm1 :[deadlock-free]	
assert P_pkg0_C1_stm1;RUN({r__}) :[deadlock-free]
assert P_pkg0_C1_stm1 :[deterministic]
assert P_pkg0_C1_stm1 :[divergence-free]
-- timed deadlock free
assert prioritise(P_pkg0_C1_stm1[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_pkg0_C1_stm1
-- timed deadlock free
assert prioritise(P_pkg0_C1[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_pkg0_C1


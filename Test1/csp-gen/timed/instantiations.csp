-- generate string
nametype core_string = LSeq(Char,2)

-- generate Chem
nametype Chemical_Chem = {0,1}

-- generate -- OPERATION BOUNDS

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate const_pkg0_stm0_const1
const_pkg0_stm0_const1 = 0

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate Plus
Plus(e1,e2,T) = if member(e1+e2,T) then e1+e2 else e1

-- generate Chemical_location
Chemical_location(gs) = Chemical_Angle_Left

-- generate --

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- generate nat
nametype core_nat = union({0..2},{calc_type_min(Union(
			{}))..calc_type_max(Union({}))})

-- generate core_clock_type
nametype core_clock_type = {0..10}

-- BASIC FUNCTIONS

-- generate Intensity
nametype Chemical_Intensity = {0,1}

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate Chemical_analysis
Chemical_analysis(gs) = Chemical_Status_noGas

-- generate Chemical_angle
Chemical_angle(x) = Chemical_Angle_Left

-- generate real
nametype core_real = union({ -2..2},{calc_type_min(Union(
			{{a|a <- { -2..2}},{Plus(Plus(l, 1, core_int), m, core_int)|l <- { -2..2},m <- { -2..2}},{Plus(l, const1, core_int)|const1 <- { -2..2},l <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2}}))..calc_type_max(Union({{a|a <- { -2..2}},{Plus(Plus(l, 1, core_int), m, core_int)|l <- { -2..2},m <- { -2..2}},{Plus(l, const1, core_int)|const1 <- { -2..2},l <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2}}))}) 

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate Chemical_goreq
Chemical_goreq(i1,i2) = true

-- generate const_pkg0_C1_stm1_const1
const_pkg0_C1_stm1_const1 = 0

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate const_pkg0_C1_stm0_const1
const_pkg0_C1_stm0_const1 = 0

-- generate int
nametype core_int = union({ -2..2},{calc_type_min(Union(
			{{a|a <- { -2..2}},{Plus(Plus(l, 1, { -2..2}), m, { -2..2})|l <- { -2..2},m <- { -2..2}},{Plus(l, const1, { -2..2})|const1 <- { -2..2},l <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2}}))..calc_type_max(Union({{a|a <- { -2..2}},{Plus(Plus(l, 1, { -2..2}), m, { -2..2})|l <- { -2..2},m <- { -2..2}},{Plus(l, const1, { -2..2})|const1 <- { -2..2},l <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2}}))})

-- generate Div
Div(e1,e2,T) = if member(e1/e2,T) then e1/e2 else e1

-- generate Neg
Neg(e1,T) = if member(-e1,T) then -e1 else e1

-- generate Chemical_card
Chemical_card(A) = 0

-- generate const_Chemical_GasAnalysis_thr
const_Chemical_GasAnalysis_thr = 0

-- generate boolean
nametype core_boolean = Bool

-- generate Mult
Mult(e1,e2,T) = if member(e1*e2,T) then e1*e2 else e1

-- generate Modulus
Modulus(e1,e2,T) = if member(e1%e2,T) then e1%e2 else e1

-- generate const_pkg1_C1_stm0_const1
const_pkg1_C1_stm0_const1 = 0

-- generate Chemical_intensity
Chemical_intensity(gs) = 0

-- generate Minus
Minus(e1,e2,T) = if member(e1-e2,T) then e1-e2 else e1


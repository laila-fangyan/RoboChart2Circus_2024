-- generate move_BOUND
move_BOUND = 2

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- generate const_Location_changeDirection_lv
const_Location_changeDirection_lv = 0

-- BASIC TYPES

-- generate string
nametype core_string = LSeq(Char,2)

-- generate const_MicroController_stm_ref0_evadeTime
const_MicroController_stm_ref0_evadeTime = 0

-- generate const_MicroController_stm_ref0_lv
const_MicroController_stm_ref0_lv = 0

-- generate const_Movement_evadeTime
const_Movement_evadeTime = 0

-- generate Chem
nametype Chemical_Chem = {0,1}

-- generate -- OPERATION BOUNDS

-- generate const_Movement_lv
const_Movement_lv = 0

-- generate Plus
Plus(e1,e2,T) = if member(e1+e2,T) then e1+e2 else e1

-- generate Chemical_location
Chemical_location(gs) = Chemical_Angle_Left

-- generate const_GasAnalysis_thr
const_GasAnalysis_thr = 0

-- generate --

-- generate nat
nametype core_nat = union({0..2},{calc_type_min(Union(
			{{0..2},{0..2},{0..2},{0..2},{0}}))..calc_type_max(Union({{0..2},{0..2},{0..2},{0..2},{0}}))})

-- generate core_clock_type
nametype core_clock_type = {0..10}

-- BASIC FUNCTIONS

-- generate shortRandomWalk_BOUND
shortRandomWalk_BOUND = 2

-- generate Intensity
nametype Chemical_Intensity = {0,1}

-- generate Chemical_analysis
Chemical_analysis(gs) = Chemical_Status_noGas

-- generate Chemical_angle
Chemical_angle(x) = Chemical_Angle_Left

-- generate const_Movement_stuckPeriod
const_Movement_stuckPeriod = 0

-- generate const_MicroController_stm_ref0_outPeriod
const_MicroController_stm_ref0_outPeriod = 0

-- generate real
nametype core_real = union({ -2..2},{calc_type_min(Union(
			{{ -2..2},{ -2..2},{ -2..2},{0..2},{ -2..2},{0..2},{0..2},{ -2..2},{0..2},{ -2..2},{ -2..2},{0},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}}}))..calc_type_max(Union({{ -2..2},{ -2..2},{ -2..2},{0..2},{ -2..2},{0..2},{0..2},{ -2..2},{0..2},{ -2..2},{ -2..2},{0},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}},{lv|lv <- { -2..2}}}))}) 

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate Chemical_goreq
Chemical_goreq(i1,i2) = true

-- generate const_Movement_outPeriod
const_Movement_outPeriod = 0

-- generate int
nametype core_int = union({ -2..2},{calc_type_min(Union(
			{{0..2},{0..2},{0..2},{0..2},{0}}))..calc_type_max(Union({{0..2},{0..2},{0..2},{0..2},{0}}))})

-- generate Div
Div(e1,e2,T) = if member(e1/e2,T) then e1/e2 else e1

-- generate const_MainController_stm_ref0_thr
const_MainController_stm_ref0_thr = 0

-- OPERATION CONSTANTS

-- generate Neg
Neg(e1,T) = if member(-e1,T) then -e1 else e1

-- generate Chemical_card
Chemical_card(A) = 0

-- generate boolean
nametype core_boolean = Bool

-- generate Mult
Mult(e1,e2,T) = if member(e1*e2,T) then e1*e2 else e1

-- generate Modulus
Modulus(e1,e2,T) = if member(e1%e2,T) then e1%e2 else e1

-- generate const_MicroController_stm_ref0_stuckPeriod
const_MicroController_stm_ref0_stuckPeriod = 0

-- generate const_Movement_stuckDist
const_Movement_stuckDist = 0

-- generate const_MicroController_stm_ref0_stuckDist
const_MicroController_stm_ref0_stuckDist = 0

-- generate Chemical_intensity
Chemical_intensity(gs) = 0

-- generate Minus
Minus(e1,e2,T) = if member(e1-e2,T) then e1-e2 else e1


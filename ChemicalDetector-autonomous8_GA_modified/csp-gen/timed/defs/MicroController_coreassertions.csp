
--
-- RoboChart generator version 3.0.0.202401231330
-- Automatically generated on 01-05-2025 09:52:17
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "Location_defs.csp"
include "function_toolkit_defs.csp"
include "relation_toolkit_defs.csp"
include "core_defs.csp"
include "state_timed_defs.csp"
include "../instantiations.csp"
include "MicroController.csp"
include "Chemical_defs.csp"
include "set_toolkit_defs.csp"
include "core_timed_defs.csp"
include "sequence_toolkit_defs.csp"
include "file_MicroController_defs.csp"
include "robochart_defs.csp"

transparent wbisim
channel r__
-- generate MicroController
P_MicroController = let
	id__ = 0
	
	
	
	const_MicroController_stm_ref0_lv = const_Movement_lv
	const_MicroController_stm_ref0_evadeTime = const_Movement_evadeTime
	const_MicroController_stm_ref0_stuckPeriod = const_Movement_stuckPeriod
	const_MicroController_stm_ref0_stuckDist = const_Movement_stuckDist
	const_MicroController_stm_ref0_outPeriod = const_Movement_outPeriod
		
	const_MicroController_op_ref0_lv = const_Location_changeDirection_lv
within
	MicroController::O__(id__,
			    const_MicroController_stm_ref0_lv,
			    const_MicroController_stm_ref0_evadeTime,
			    const_MicroController_stm_ref0_stuckPeriod,
			    const_MicroController_stm_ref0_stuckDist,
			    const_MicroController_stm_ref0_outPeriod,
			   	const_MicroController_op_ref0_lv)

assert P_MicroController :[deadlock-free]	
assert P_MicroController;RUN({r__}) :[deadlock-free]
assert P_MicroController :[deterministic]
assert P_MicroController :[divergence-free]

-- generate MicroController_stm_ref0
P_MicroController_stm_ref0 = let
	id__ = 0
	
	
	
within
	MicroController::stm_ref0::O__(
		id__,
		const_Movement_lv,
		const_Movement_evadeTime,
		const_Movement_stuckPeriod,
		const_Movement_stuckDist,
		const_Movement_outPeriod,
		const_Location_changeDirection_lv
	)
assert P_MicroController_stm_ref0 :[deadlock-free]	
assert P_MicroController_stm_ref0;RUN({r__}) :[deadlock-free]
assert P_MicroController_stm_ref0 :[deterministic]
assert P_MicroController_stm_ref0 :[divergence-free]
-- timed deadlock free
assert prioritise(P_MicroController_stm_ref0[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_MicroController_stm_ref0
-- timed deadlock free
assert prioritise(P_MicroController[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_MicroController

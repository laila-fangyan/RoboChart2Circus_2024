
--
-- RoboChart generator version 3.0.0.202401231330
-- Automatically generated on 01-05-2025 09:52:16
--
-- Iterated compression status: true
-- Assertions compression status: false
--


	include "defs/state_defs.csp"
	include "defs/core_defs.csp"
	include "defs/file_GasAnalysis_defs.csp"
	include "defs/file_Module_defs.csp"
	include "defs/sequence_toolkit_defs.csp"
	include "defs/Chemical_defs.csp"
	include "defs/Movement.csp"
	include "defs/file_MainController_defs.csp"
	include "defs/file_Movement_defs.csp"
	include "defs/function_toolkit_defs.csp"
	include "defs/robochart_defs.csp"
	include "defs/GasAnalysis.csp"
	include "defs/ChemicalDetector.csp"
	include "defs/file_MicroController_defs.csp"
	include "defs/Location_defs.csp"
	include "defs/set_toolkit_defs.csp"
	include "instantiations.csp"
	include "defs/relation_toolkit_defs.csp"
	
	channel r__
	
	channel done3
	DONE3 = done3 -> DONE3
	SpecA3 = GasAnalysis::O__(0,const_GasAnalysis_thr) [| {|GasAnalysis::stop|} |] GasAnalysis::stop.out -> DONE3
	
	channel done5
	DONE5 = done5 -> DONE5
	SpecA5 = Movement::O__(0, const_Movement_lv, const_Movement_evadeTime, const_Movement_stuckPeriod, const_Movement_stuckDist, const_Movement_outPeriod) [| {|Movement::flag|} |] Movement::flag.out -> DONE5
	
	SpecB1 = GasAnalysis::gas?x -> (
		|~|e:{|GasAnalysis::resume, GasAnalysis::stop, GasAnalysis::turn|} @ e->SpecB1
	)
	|~|
	STOP
	|~|
	GasAnalysis::terminate -> SKIP
	
	SpecB2 = let
		Init = SKIP |~| Movement::randomWalkCall -> SKIP
		Reaction = |~|e:{|Movement::moveCall, Movement::randomWalkCall, Movement::flag|} @ e->(Reaction|~|SKIP)
		T = (SKIP |~| (|~|e:{|Movement::turn,Movement::stop, Movement::resume|} @ e->SKIP); Reaction; T)
		Chaos = STOP |~| (|~| e: {|Movement::obstacle, Movement::odometer, Movement::changeDirectionCall, Movement::shortRandomWalkCall, Movement::resume|} @ e -> Chaos) |~| Movement::terminate -> SKIP
	within
		(Init ||| T ||| Chaos)
	
	NoGas = ChemicalDetector::gas.in.<(0,0)> -> NoGas
		SpecB3 = ChemicalDetector::O__(
					0,
					const_MicroController_stm_ref0_lv, 
					const_MicroController_stm_ref0_evadeTime, 
					const_MicroController_stm_ref0_stuckPeriod, 
					const_MicroController_stm_ref0_stuckDist, 
					const_MicroController_stm_ref0_outPeriod, 
					const_MainController_stm_ref0_thr, 
					const_Location_changeDirection_lv
		) [| {|ChemicalDetector::gas|} |] NoGas
	
	-- A1 - deterministic
	assert let 
		id__ = 0
		
		
		
	within
		GasAnalysis::D__(id__,
				    const_GasAnalysis_thr) :[deterministic]
	
	-- A2 - divergence free
	assert let 
		id__ = 0
		
		
		
	within
		GasAnalysis::D__(id__,
				    const_GasAnalysis_thr) :[divergence free]
	
	-- A3 - deadlock free
	assert SpecA3 :[deadlock free]
	
	-- A4 - divergence free
	assert let 
		id__ = 0
		
		
		
	within
		Movement::D__(id__,
				    const_Movement_lv,
				    const_Movement_evadeTime,
				    const_Movement_stuckPeriod,
				    const_Movement_stuckDist,
				    const_Movement_outPeriod) :[divergence free]
	
	-- A5 - deadlock free
	assert SpecA5 :[deadlock free]
	
	-- A6 - terminating
	assert not let 
		id__ = 0
		
		
		
		const_MicroController_stm_ref0_lv = const_Movement_lv
		const_MicroController_stm_ref0_evadeTime = const_Movement_evadeTime
		const_MicroController_stm_ref0_stuckPeriod = const_Movement_stuckPeriod
		const_MicroController_stm_ref0_stuckDist = const_Movement_stuckDist
		const_MicroController_stm_ref0_outPeriod = const_Movement_outPeriod
		const_MainController_stm_ref0_thr = const_GasAnalysis_thr
			
		const_MicroController_op_ref0_lv = const_Location_changeDirection_lv
	within
		ChemicalDetector::D__(id__,
				    const_MicroController_stm_ref0_lv,
				    const_MicroController_stm_ref0_evadeTime,
				    const_MicroController_stm_ref0_stuckPeriod,
				    const_MicroController_stm_ref0_stuckDist,
				    const_MicroController_stm_ref0_outPeriod,
				    const_MainController_stm_ref0_thr,
				   	const_MicroController_op_ref0_lv) :[deadlock free]
	assert let 
		id__ = 0
		
		
		
		const_MicroController_stm_ref0_lv = const_Movement_lv
		const_MicroController_stm_ref0_evadeTime = const_Movement_evadeTime
		const_MicroController_stm_ref0_stuckPeriod = const_Movement_stuckPeriod
		const_MicroController_stm_ref0_stuckDist = const_Movement_stuckDist
		const_MicroController_stm_ref0_outPeriod = const_Movement_outPeriod
		const_MainController_stm_ref0_thr = const_GasAnalysis_thr
			
		const_MicroController_op_ref0_lv = const_Location_changeDirection_lv
	within
		ChemicalDetector::D__(id__,
				    const_MicroController_stm_ref0_lv,
				    const_MicroController_stm_ref0_evadeTime,
				    const_MicroController_stm_ref0_stuckPeriod,
				    const_MicroController_stm_ref0_stuckDist,
				    const_MicroController_stm_ref0_outPeriod,
				    const_MainController_stm_ref0_thr,
				   	const_MicroController_op_ref0_lv); RUN({r__}) :[deadlock free]
	
	-- B1 - refinement
	assert SpecB1 [FD= let 
		id__ = 0
		
		
		
	within
		GasAnalysis::D__(id__,
				    const_GasAnalysis_thr)
	
	-- B2 - refinement
	assert SpecB2 [FD= let 
		id__ = 0
		
		
		
	within
		Movement::D__(id__,
				    const_Movement_lv,
				    const_Movement_evadeTime,
				    const_Movement_stuckPeriod,
				    const_Movement_stuckDist,
				    const_Movement_outPeriod)
	
	-- B3 - deadlock free
	assert SpecB3 :[deadlock free]
	


--
-- RoboChart generator version 3.0.0.202401231330
-- Automatically generated on 06-05-2024 11:20:30
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "file_simplerStm.csp"

-- generate stm0
P_stm0 = let
	id__ = 0
	
	
	
within
	stm0::O__(
		id__,
		const_stm0_delta,
		const_stm0_Thr
	)
assert P_stm0 :[deadlock-free]	
assert P_stm0;RUN({r__}) :[deadlock-free]
assert P_stm0 :[deterministic]
assert P_stm0 :[divergence-free]
-- timed deadlock free
assert prioritise(P_stm0[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_stm0
-- generate stm1
P_stm1 = let
	id__ = 0
	
	
	
within
	stm1::O__(
		id__
	)
assert P_stm1 :[deadlock-free]	
assert P_stm1;RUN({r__}) :[deadlock-free]
assert P_stm1 :[deterministic]
assert P_stm1 :[divergence-free]
-- timed deadlock free
assert prioritise(P_stm1[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_stm1

-- generate OP_move2
P_OP_move2 = let
	id__ = 0
	
	param_lv = 0
	param_a = 0
	
	
	
within
	OP_move2::O__(id__,
				param_lv,
				param_a)
assert P_OP_move2 :[deadlock-free]	
assert P_OP_move2;RUN({r__}) :[deadlock-free]
assert P_OP_move2 :[deterministic]
assert P_OP_move2 :[divergence-free]
-- timed deadlock free
assert prioritise(P_OP_move2[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_OP_move2



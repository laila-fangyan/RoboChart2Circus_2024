-- generate --

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- generate nat
nametype core_nat = union({0..2},{calc_type_min(Union(
			{{6},{6},{3},{3},{0},{1}}))..calc_type_max(Union({{6},{6},{3},{3},{0},{1}}))})

-- generate core_clock_type
nametype core_clock_type = {0..10}

-- BASIC FUNCTIONS

-- generate const_stm0_Thr
const_stm0_Thr = 0

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate string
nametype core_string = LSeq(Char,2)

-- generate real
nametype core_real = union({ -2..2},{calc_type_min(Union(
			{{6},{6},{input|input <- { -2..2}},{3},{input|input <- { -2..2}},{(Plus(Mult(input4, input, core_int), 4, core_int))|input <- { -2..2},input4 <- { -2..2}},{input|input <- { -2..2}},{2},{Mult(input4, (Plus(2, input, core_int)), core_int)|input <- { -2..2},input4 <- { -2..2}},{Plus(3, Mult(input2, input3, core_int), core_int)|input3 <- { -2..2},input2 <- { -2..2}},{input2|input2 <- { -2..2}},{Minus(4, 1, core_int)},{Plus(5, delta, core_int)|delta <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{3},{0},{input|input <- { -2..2}},{1}}))..calc_type_max(Union({{6},{6},{input|input <- { -2..2}},{3},{input|input <- { -2..2}},{(Plus(Mult(input4, input, core_int), 4, core_int))|input <- { -2..2},input4 <- { -2..2}},{input|input <- { -2..2}},{2},{Mult(input4, (Plus(2, input, core_int)), core_int)|input <- { -2..2},input4 <- { -2..2}},{Plus(3, Mult(input2, input3, core_int), core_int)|input3 <- { -2..2},input2 <- { -2..2}},{input2|input2 <- { -2..2}},{Minus(4, 1, core_int)},{Plus(5, delta, core_int)|delta <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{3},{0},{input|input <- { -2..2}},{1}}))}) 

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate int
nametype core_int = union({ -2..2},{calc_type_min(Union(
			{{6},{6},{input|input <- { -2..2}},{3},{input|input <- { -2..2}},{(Plus(Mult(input4, input, { -2..2}), 4, { -2..2}))|input <- { -2..2},input4 <- { -2..2}},{input|input <- { -2..2}},{2},{Mult(input4, (Plus(2, input, { -2..2})), { -2..2})|input <- { -2..2},input4 <- { -2..2}},{Plus(3, Mult(input2, input3, { -2..2}), { -2..2})|input3 <- { -2..2},input2 <- { -2..2}},{input2|input2 <- { -2..2}},{Minus(4, 1, { -2..2})},{Plus(5, delta, { -2..2})|delta <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{3},{0},{input|input <- { -2..2}},{1}}))..calc_type_max(Union({{6},{6},{input|input <- { -2..2}},{3},{input|input <- { -2..2}},{(Plus(Mult(input4, input, { -2..2}), 4, { -2..2}))|input <- { -2..2},input4 <- { -2..2}},{input|input <- { -2..2}},{2},{Mult(input4, (Plus(2, input, { -2..2})), { -2..2})|input <- { -2..2},input4 <- { -2..2}},{Plus(3, Mult(input2, input3, { -2..2}), { -2..2})|input3 <- { -2..2},input2 <- { -2..2}},{input2|input2 <- { -2..2}},{Minus(4, 1, { -2..2})},{Plus(5, delta, { -2..2})|delta <- { -2..2}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{3},{0},{input|input <- { -2..2}},{1}}))})

-- generate -- OPERATION BOUNDS

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- generate Div
Div(e1,e2,T) = if member(e1/e2,T) then e1/e2 else e1

-- generate Neg
Neg(e1,T) = if member(-e1,T) then -e1 else e1

-- generate const_stm0_delta
const_stm0_delta = 0

-- generate boolean
nametype core_boolean = Bool

-- generate Mult
Mult(e1,e2,T) = if member(e1*e2,T) then e1*e2 else e1

-- generate Modulus
Modulus(e1,e2,T) = if member(e1%e2,T) then e1%e2 else e1

-- generate Plus
Plus(e1,e2,T) = if member(e1+e2,T) then e1+e2 else e1

-- generate Minus
Minus(e1,e2,T) = if member(e1-e2,T) then e1-e2 else e1

